on:
    workflow_call:
      inputs:
        api_name:
          type: string
          required: true
        app_name:
          type: string
          required: true
  
  jobs:
    apply:
      name: Terraform Apply
      runs-on: ubuntu-22.04
      environment: opex-prod-cd
      env:
        API_NAME: ${{ inputs.api_name }}
        APP_NAME: ${{ inputs.app_name }}
        DOCKER_IMAGE_TAG: sha256:04d8ead53c772d23b094c2a395292dc159e6f2905e1b13b5f828f31eac6eb27f # action v1.2.1 docker image tag
        TEMPLATE_DIR: azure-dashboard
        ARM_USE_OIDC: true
        ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
        ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
        ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
      permissions:
        id-token: write
        contents: read
  
      steps:
        - name: Checkout
          id: checkout
          uses: actions/checkout@1f9a0c22da41e6ebfa534300ef656657ea2c6707
          with:
            persist-credentials: false
            fetch-depth: 0
  
        # mitigation: opex-dashboard-azure-action currently does not support .opex
        # directory parameter
        - run: |
            cp -r apps/${{ env.APP_NAME }}/.opex ./
          shell: bash
  
        - uses: pagopa/opex-dashboard-azure-action@3ad80a5e4a2d5a8f342615637072f21b687320ce # action v1.2.1
          with:
            environment: prod
            api-name: ${{ env.API_NAME }}
            config: .opex/${{ env.API_NAME }}/env/prod/config.yaml
            client-id: ${{ secrets.ARM_CLIENT_ID }}
            tenant-id: ${{ secrets.ARM_TENANT_ID }}
            subscription-id: ${{ secrets.ARM_SUBSCRIPTION_ID }}
            docker-version: ${{ env.DOCKER_IMAGE_TAG }}