<policies>
    <inbound>
        <base />
        <set-backend-service base-url="{{ts-subscription-fn-url}}" />
        <set-header name="x-functions-key" exists-action="override">
            <value>{{ts-subscription-fn-key}}</value>
        </set-header>
        <set-header name="x-user-id" exists-action="override">
            <value>@(context.User.Id)</value>
        </set-header>
        <set-header name="x-user-groups" exists-action="override">
            <value>@(String.Join(",", context.User.Groups.Select(g => g.Name)))</value>
        </set-header>
        <set-header name="x-subscription-id" exists-action="override">
            <value>@(context.Subscription.Id)</value>
        </set-header>
        <set-header name="x-user-email" exists-action="override">
            <value>@(context.User.Email)</value>
        </set-header>
        <cors>
            <allowed-origins>
                <origin>*</origin>
            </allowed-origins>
            <allowed-methods>
                <method>*</method>
            </allowed-methods>
            <allowed-headers>
                <header>*</header>
            </allowed-headers>
            <expose-headers>
                <header>*</header>
            </expose-headers>
        </cors>
    </inbound>
    <outbound>
        <base />
        <set-header name="x-test-header" exists-action="override">
          <value>{{test-named-value}}</value>
        </set-header>
    </outbound>
    <backend>
        <base />
    </backend>
    <on-error>
        <base />
    </on-error>
</policies>
